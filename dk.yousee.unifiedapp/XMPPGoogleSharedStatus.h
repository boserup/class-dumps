//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "XMPPModule.h"

@class NSDictionary, NSString;

@interface XMPPGoogleSharedStatus : XMPPModule
{
    int _statusListMaxCount;
    int _statusMessageMaxLength;
    BOOL _sharedStatusSupported;
    BOOL _assumeIdleUpdateResponsibility;
    BOOL _invisible;
    NSDictionary *_sharedStatus;
    NSString *_status;
    NSString *_show;
    NSString *_statusMessage;
    NSString *_statusAvailability;
    NSString *_previousShow;
}

@property(copy, nonatomic) NSString *previousShow; // @synthesize previousShow=_previousShow;
@property(copy, nonatomic) NSString *statusAvailability; // @synthesize statusAvailability=_statusAvailability;
@property(copy, nonatomic) NSString *statusMessage; // @synthesize statusMessage=_statusMessage;
@property(nonatomic) BOOL invisible; // @synthesize invisible=_invisible;
@property(retain, nonatomic) NSString *show; // @synthesize show=_show;
@property(retain, nonatomic) NSString *status; // @synthesize status=_status;
@property(nonatomic) BOOL assumeIdleUpdateResponsibility; // @synthesize assumeIdleUpdateResponsibility=_assumeIdleUpdateResponsibility;
@property(retain, nonatomic) NSDictionary *sharedStatus; // @synthesize sharedStatus=_sharedStatus;
@property(nonatomic) BOOL sharedStatusSupported; // @synthesize sharedStatusSupported=_sharedStatusSupported;
- (void).cxx_destruct;
- (void)xmppSystemInputActivityMonitorDidBecomeInactive:(id)arg1;
- (void)xmppSystemInputActivityMonitorDidBecomeActive:(id)arg1;
- (id)packSharedStatus:(id)arg1;
- (id)unpackSharedStatus:(id)arg1;
- (BOOL)xmppStream:(id)arg1 didReceiveIQ:(id)arg2;
- (void)refreshSharedStatus;
- (void)discoverCapabilities;
- (void)xmppStreamDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)xmppStreamDidAuthenticate:(id)arg1;
- (void)updateSharedStatus:(id)arg1 show:(id)arg2 invisible:(BOOL)arg3;
- (void)deactivate;
- (BOOL)activate:(id)arg1;
- (id)initWithDispatchQueue:(struct dispatch_queue_s *)arg1;

@end

